1. 유사점
	- C++ 과 Java 모두 클래스의 객체를 인스턴스화 하지 않는 static 메소드 또는 함수를 지원한다.
	- C++ 과 Java 모두 오버로딩 생성자를 제공한다.
	
2. 차이점
	- Java는 전처리기, typedef, defined를 지원하지 않는다.
	- Java는 클래스(class)를 지원하지만 구조체와 공용체을 지원하지 않는다.
	- 모든 Java 클래스의 최상위 클래스는 Object 클래스이다.
		(모든 Java 클래스는 Object 클래스를 상속한다.)
	- interface 키워드는 Java에서만 제공한다.
	- Java에서 선언하는 모든 변수 또는 메서드는 모두 클래스 선언 내에 포함된다.
	- Java는 다중 상속을 지원하지 않는다.
	
	- C++은 배열의 범위를 초과하면 이를 판단할 수 없지만 Java는 배열의 사이즈 값을 가진 length 멤버 변수를 지닌다.
		(java는 객체를 배열로 제공하기에, 배열의 범위를 넘어서면 이를 index bound 예외를 발생시킨다)
	
	- Java는 포인터를 지원하지 않는다. (따라서 -> 연산자 역시 없다)
	- C++에서 char 은 1byte, Java는 2byte이다.
	- Java에는 소멸자가 없다. 대신 훨씬 더 좋은 GC가 있다.
	- Java에서는 virtual 키워드가 없다.
		(Java는 static 함수가 아닌 모든 함수는 항상 동적 바인딩 사용)
	- java에는 final 키워드가 존재한다
		(final 선언은 다중 정의가 될 수 없으므로 정적으로 바인딩됨을 의미한다.)
		
	* 정적 바인딩
		> 함수 또는 메서드를 컴파일시에 의미를 부여
	* 동적 바인딩
		> 함수 또는 메서드를 실행시에 의미 부여
		(C++ 에서 virutal은 동적바인딩을 하겠다는 것)