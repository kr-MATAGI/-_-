1. Wrapper Class
	- 대표적인 예 : Integer, Float, Boolean
	- 기본 자료형(Primitive data type)에 대한 클래스 표현을 Wrapper class라고 한다.
	
	* 왜 Wrapper Class를 사용해야 하는가?
		- 컬렉션에서 제네릭을 사용하기 위해서는 Wrapper class를 사용해야한다.
		- null 값을 반환해야 하는 경우에는 return type을 Wrapper class로 지정하여 null을 반환하도록 할 수 있다.
		- 위 상황을 제외하고 일반적인 상황에서 Wrapper class를 사용해야 하는 이유는 객체지향적인 프로그래밍을 위해서.
			1) 값을 비교해야할 때 Primitive data type인 경우 == 로 바로 비교해줄 수 있다.
			하지만 Wrapper class 인 경우에는 .intValue() 메소드를 통해 해당 Wrapper class 값을 가져와 비교해줘야 한다.
			
		
	
2. Auto Boxing
	- JDK 1.5 부터 AutoBoxing 과 AutoUnBoxing을 제공한다.
	- 이 기능은 각 Wrapper class 에 상응하는 Primitive data type일 경우에만 가능한다.
		e.g)
			List<Integer> lists = new ArrayList<>();
			lists.add(1);
			-> Integer라는 Wrapper class 로 설정한 collection에 데이터를 add할 때
			Integer 객체로 감싸 넣지 않는다. 자바에서 AutoBoxing 해주기 때문이다.
		