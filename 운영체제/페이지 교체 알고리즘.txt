1. FIFO
	- 먼저 물리 메모리에 들어온 페이지 순서대로 페이지 교체 시 나간다.
	
	-단점:
		1) 오래된 페이지가 항상 불필요하지 않는 정보를 포함하지 않을 수 있다. (초기 변수)
		2) 처음부터 활발하게 사용되는 페이지를 교체해서 페이지 부재율을 높이는 부작용을 초래할 수 있다.
		3) Belady의 모순
			> 페이지를 저장할 수 있는 페이지 프레임의 갯수를 늘려도 되려 페이지 부재가 더 많이 발생하는 모순이 존재.
			
2. 최적 페이지 교체(Optimal Page Replacement)
	- Belady의 모순 해결
	- 앞으로 가장 오랫동안 사용되지 않을 페이지를 교체
	
	- 장점
		> 알고리즘 중 가장 낮은 페이지 부재율
		
	- 단점
		> 구현의 어려움 (모든 프로세스의 메모리 참조의 계획을 미리 파악할 수 있는 방법이 없다.)
		
3. LRU (Least Frequently Used)
	- 참조 횟수가 가장 적은 페이지를 교체하는 방법.

4. MFU (Most Frequently Used)
	- 참조 횟수가 가장 작은 페이지가 최근 메모리에 올라왔고, 앞으로 계속 사용될 것이라는 가정