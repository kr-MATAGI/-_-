<소프트웨어 개발 보안 구축_2>

1. 에러 처리
	- 오류 메시지를 통한 정보 노출
	- 오류 상황 대응 부재
	- 부적절한 예외 처리
	
2. 코드 오류
	- 널 포인터 역참조
	- 부적절한 자원 해제
	- 해제된 자원 이미 사용
	- 초기화되지 않은 변수 사용
	
3. 캡슐화
	- 정보 은닉이 필요한 중요한 데이터와 기능을 불충분하게 캡슐화하거나 잘못 사용함으로써 발생할 수 있는 문제를 예방하기 위한 보안 점검 항목
	
	- 제거되지 않고 남은 디버그 코드
	- 시스템 데이터 정보 노출
	- public 메소드로부터 반환된 private 배열
	- private 배열에 public 데이터 할당
	
4. API 오용
	- DNS Lookup에 의존한 보안 결정
		> 도메인명에 의존하여 보안 결정을 내리는 경우 발생하는 보안 약점
		> IP 주소를 직접 입력하도록 접근하게 하여 방지 가능
	
	- 취약한 API 사용

5. 암호 알고리즘
	
	1) 개인키 암호화 기법
		- 동일한 키로 데이터를 암호화하고 복호화 함
		- 대칭 암호 기법, 단일 암호화 기법이라고 함
		- Stream 기법
			> 평문과 동일한 길이의 스트림을 생성하여 비트 단위로 암호화
		- Block 기법
			> 한 번에 하나의 데이터 블록을 암호화
	
	2) 공개키 암호화 기법
		- 데이터를 암호화하는 공개키는 데이터베이스 사용자에게 공개하고 
		복호화하는 비밀키는 관리자에게만 공개
		- 비대칭 암호화 기법
		- RSA 기법
			> 공개키와 비밀키는 메시지를 열고 잠그는 상수를 의미
			
	3) 양방향 암호화 알고리즘 종류
		- SEED
			> 블록 크기는 128비트, 키의 길이에 따라 128, 256으로 분류
		- ARIA
			> 블록 크기는 128비트, 키의 길이에 따라 128, 192, 256로 분류
		- DES
			> 블록 크기는 64비트, 키의 길이는 56비트
		- AES
			> 블록 크기는 128비트, 키의 길이에 따라 128, 192, 256로 분류
			
	4) 해시(Hash)
		- 임의의 길이의 입력 데이터나 메시지를 고정된 길이의 값이나 키로 변환
		- SHA 시리즈, MD5, N-NASH, SNEFRU 등