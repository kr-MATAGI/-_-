<소프트웨어 개발 보안 구축_1>


1. Secure SDLC
	- 보안상 안전한 소프트웨어를 개발하기 위해 SDLC(소프트웨어 개발 생명 주기)에 보안 강화를 위한 프로세스를 포함한 것
	
	- 요구사항 분석 단계에서의 보안 활동
		> 보안 요소
			: 기밀성, 무결성, 가용성, 인증, 부인 방지
			
	- 설계 단계에서의 보안 활동
	
	- 구현 단계에서의 보안 활동
		> 시큐어 코딩
			: 구현 단계에서 발생할 수 있는 보안 취약점을 최소화하기 위해 보안 요소들을 고려하여 코딩
			
	- 테스트 단계에서의 보안 활동
	
	- 유지보수 단게에서의 보안 활동
	
2. 세션 통제
	- 서버와 클라이언트의 연결인 세션 간의 연결로 인해 발생하는 정보를 관리
	- 요구사항 분석 및 설계 단계에서 진단해야 하는 보안 점검 내용
	
	- 불충분한 세션 관리
		> 일정한 규칙이 존재하는 세션ID가 발급되거나 타임아웃이 너무 길게 설정되어 있는 경우 발생
		> 세션 하이재킹(세션 정보를 가로채는 공격)을 통해 획득한 세션 ID로 접근할 수 있음
		
	- 잘못된 세션에 의한 정보 노출
		> 다중 스레드 환경에서 멤버 변수에 정보를 저장할 때 발생
		> 변수의 범위를 제한하는 방법으로 방지 가능
		> 싱글톤 패턴에서 발생하는 레이스컨디션으로 인해 동기화 오류가 발생하거나 멤버 변수의 정보가 노출될 수 있음
		* 레이스 컨디션
			> 두 개 이상의 프로세스가 공용 자원을 획득하기 위해 경쟁하고 있는 상태
			
	- 세션 설계 시 고려사항
		> 로그아웃 요청 시 할당된 세션이 완전히 제거되도록 함
		> 이전 세션이 종료되지 않으면 새로운 세션이 생성되지 못하도록 함
		
3. 입력 데이터 검증 및 표현의 보안 약점
	- SQL 삽입
	- 경로 조작 및 자원 삽입
	- 크로스사이트 필터링(XSS)
	- 운영체제 명령어 삽입
	- 위험한 형식 파일 업로드
	- 신뢰되지 않는 URL 주소로 연결
	
4. 보안 기능의 보안 취약점
	- 적절한 인가 없이 사용
	- 부적절한 인가
	- 중요한 자원에 대한 잘못된 권한 설정
	- 취약한 암호화 알고리즘 사용
	- 중요정보 평문 저장 및 전송
	- 하드코드된 비밀번호
	
5. 시간 및 상태
	- 동시 수행을 지원하는 병렬 시스템이나 다수의 프로세스가 동작하는 환경에서 시간과 실행 상태를 관리하여
	원할하게 동작되도록 하기 위한 보안 검증 항목
	
	- TOCTOU 경쟁 조건
		> 검사 시점과 사용 시점을 고려하지 않고 발생하는 보안 약점
		
	- 종료되지 않은 반복문 또는 재귀 함수
		> 조건이나 논리 구조를 잘못 구성하여 종료할 수 없게 되는 경우
		시스템의 자원을 끊임없이 사용하여 자원고갈로 인한 서비스 또는 시스템 장애 발생