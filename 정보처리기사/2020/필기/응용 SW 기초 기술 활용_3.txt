<응용 SW 기초 기술 활용_3>

1. 스케줄링
	- 프로세스가 생성되어 실행될 떄 필요한 시스템의 여러 자원을 해당 프로세스에게 할당하는 방법
	- 문맥 교환
		> 하나의 프로세스에서 다른 프로세스로 CPU가 할당되는 과정에서 발생하는 것
		> 새로운 프로세스에 CPU를 할당하기 위해 현재 CPU가 할당된 프로세스의 상태 정보 저장.
		> 새로운 프로세스의 상태 정보를 설정한 후 CPU를 할당하여 실행하도록 하는 작업
		
	
2. 스케줄링의 목적
	- CPU나 자원을 효율적으로 사용
	- 공정성
		> 모든 프로세스에게 공정하게 할당
	- 처리율 증가
		> 단위 시간당 프로세스를 처리하는 비율 증가
	- CPU 이용률 증가
		> CPU의 낭비시간을 줄이고 CPU가 순수 프로세스를 실행하는 데 사용되는 시간 비율 증가
	- 우선 순위 제도
		> 우선 순위가 높은 프로세스를 먼저 실행
	- 오버 헤드 최소화
		> 어떤 처리를 하기 위해 들어가는 간접적인 처리시간이나 메모리를 최소화
	- 반환 시간 최소화
		> 프로세스를 제출한 시간부터 실행이 완료될 때까지 걸리는 시간 최소화
	- 대기 시간 최소화
		> 프로세스가 준비상태 큐에서 대기하는 시간 최소화
	- 균형 있는 자원 사용
	- 무한 연기 회피
	
3. 프로세스 스케줄링의 기법
	- 비선점 스케줄링
		> 강제 종료 불가능
		> 이미 할당된 CPU를 다른 프로세스가 뺏어 사용할 수 없음
		> 일괄 처리 방식
		> FCFS, SJF, 우선순위, HRN, 기한부...
		
	- 선점 알고리즘
		> 강제 종료 가능
		> 우선순위가 높은 프로세스가 CPU를 강제로 뺏을 수 있음.
		> 빠른 응답 시간을 요구하는 대화식 시분할 시스템에 이용
		> 많은 오버헤드를 초래함
		> Round Robin, SRT, 선점 우선순위, 다단계 큐, 다단계 피드백 큐.....