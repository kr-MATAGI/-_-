<SQL>

1. DDL (데이터 정의어)
	-> CREATE, ALTER, DROP

2. DML (데이터 조작어)
	-> UPDATE, DELETE, SELECT, INSERT
	
3. DCL (데이터 제어어)
	-> COMMIT, ROLLBACK, GRANT(권한 부여), REVOKE(권한 취소), SAVEPOINT
	
4. VARCHAR과 CHAR의 차이
	- CHAR은 고정형 문자열
		-> 처음에 크기를 20byte로 잡을 경우, 2byte의 데이터를 넣어도 20byte의 크기를 잡는다.
	- VARCHAR은 가변형 문자열
		-> 처음 크기를 20byte로 잡아도, 2byte의 데이터를 넣을 경우 2byte의 크기만 잡는다.
	- CHAR은 이후에 연산을 할 필요가 없기 때문에 VARCHAR보다 데이터를 읽는 속도가 빠르다.	
	
5. ASC와 DESC
	- ASC(오름차순)
		: 1->2->3->4->5
	- DESC(내림차순)
		: 5->4->3->2->1

6. DDL의 DROP 옵션
	- CASECADE : 제거할 때 참조 관계에 있는 테이블의 데이터도 삭제
	- RESTRICTED : 제거할 때 참조하고 있는 테이블이 있다면 삭제를 취소
	
7. DML의 SELECT 옵션
	- ORDER BY : 정렬
	- WINDOW : GROUP BY를 이용하지 않고 속성의 값을 집계
		> PARTITION BY : WINDOW 함수가 적용될 범위로 사용할 속성을 지정
		> OREDER BY : PARTITION 안에서 정렬 기준으로 사용할 속성 지정
		> ROW_NUMBER() : 각 레코드에 대한 일련번호 반환
		> RANK() : 순위를 반환하되 공동 순위를 반영
		> DENSE_RANK() : 순위를 반환하되 공동 순위를 반영하지 않음
	- GROUP BY : 특정 속성을 기준으로 그룹화하여 검색할 때 사용, 그룹 함수와 함께 사용
		> COUNT(속성명) : 그룹별 튜플을 구하는 함수
		> SUM(속성명) : 그룹별 합계를 구하는 함수
		> AVG(속성명) : 그룹별 평균을 구하는 함수
		> MAX(속성명) : 그룹별 최대값을 구하는 함수
		> MIN(속성명) : 그룹별 최소값을 구하는 함수
		> ROLLUP(속성명, 속성명, ...) : 인수로 주어진 속성을 대상으로 그룹별 소계를 구하는 함수
		> CUBE(속성명, 속성명, ...) : 인수로 주어진 속성을 대상으로 모든 조합의 그룹별 소계를 구하는 함수
	- HAVING : GROUP BY와 함께 사용하여 그룹에 조건을 지정
	
	e.g) 
		1) SELECT DISTINCT 부서 FROM 사원;
			> 사원 테이블에서 부서를 중복없이 검색.
		
		2) SELECT * FROM 사원 WHERE 부서 = "개발" OR 부서 = "IT"
		   SELECT * FROM 사원 WHERE 부서 IN("개발", "IT")
			> 사원 테이블에서 부서가 개발 혹은 IT 인 튜플을 검색.
			
		3) SELECT * FROM 사원 WHERE 이름 LIKE "김%";
			> 사원 테이블에서 이름 "김"인 튜플을 검색.
			
		4) SELECT * FROM 사원 WHERE 부서 IS NULL;
			> 사원 테이블에서 부서가 NULL인 튜플을 검색.
			
		5) SELECT * FROM 사원 ORDER BY 이름 ASC;
			> 사원 테이블에서 이름을 오름차순으로 정렬하여 튜플을 검색.
		
	- 하위 질의 (이중 조건)
		SELECT 이름 FROM 사원 WHERE 이름 = (SELECT 이름 FROM 취미 WHERE 활동 = "축구");
			> 취미 테이블에서 활동이 '축구'인 사람의 이름을 통해
			  사원 테이블에서 이름을 검색.
	
	- 복수 테이블 (여러 테이블을 대상으로 검색)
		SELECT 사원.이름, 사원.부서 FROM 사원, 취미 WHERE 사원.경력 >= 10 AND 사원.이름 = 취미.이름;
		
	- WINDOW 함수 이용
		SELECT 부서, 경력 
		ROW_NUMBER() OVER (PARTITION BY 부서 ORDER BY 경력 DESC) AS 짬순
		FROM 사원;
			> 사원 테이블에서 부서별로 경력에 대해 내림차순 정렬 후 '짬순'이라는 일련번호(레코드 번호)를 구한 검색.
	
	- GROUP BY 검색
		SELECT 부서, AVG(경력) AS 평균
		FROM 사원
		GROUP BY 부서;
			> 사원 테이블에서 부서별로 묶은 후 경력을 평균내 '평균'이라는 별칭을 붙이고 보여주는 검색.
		
	- 집합 연산자를 이용한 통합 질의
		SELECT 속성1, 속성2, ...
		FROM 테이블명
		UNION | UNION ALL | INTERSECT | EXCEPT
		SELECT 속성1, 속성2, ...
		FROM 테이블명
		[ORDER BY 속성 [ASC | DESC]]
		
		UNION : 두 SELECT 문의 결과를 통합하고 중복된 행은 한 번만 출력
		UNION ALL : 두 SELECT문의 결과를 통합하고 중복된 행도 그래도 출력
		INTERSECT : 두 SELECT문의 결과 중 공통된 행만 출력
		EXCEPT : 두 번째 SELECT문의 결과를 제외한 첫 번째 SELECT문의 결과를 출력.