1. Index의 성능과 고려 사항
	- SELECT 쿼리의 성능을 월등히 향상시키는 Index는 항상 좋지 않다.
		> Index를 생성하게 되면 INSERT, DELETE, UPDATE 쿼리문을 실행할 때 별도의 과정이 추가적으로 발생한다.
		> INSERT의 경우 데이터도 추가해야 하므로 그만큼 성능에 손실이 따른다.
		> DELETE의 경우 존재하는 값은 삭제하지 않고 사용 안한다는 표시로 남게된다.
		  이 작업이 반복되면 실제 데이터는 10만건인데, 100만건의 데이터가 있을 수 있다.
		> UPDATE는 INSERT, DELETE 의 문제점을 동시에 수반한다.
		  이전 데이터가 삭제되고 그 자리에 새 데이터가 들어오는 개념이기 때문이다.
		  
	- 데이터의 형식에 따라 인덱스의 성능이 악영향을 줄 수 있다.
		e.g) 이름, 성별, 나이 세 가지의 필드를 가지고 있는 테이블에서
			나이는 INT, 성별은 남, 녀 두 가지의 경우에 대해서만 데이터가 존재할 것임.
			> 이름에 대해서만 인덱스를 생성하면 효과적
			> 성별이나 나이를 인덱스로 생성하면 10000 레코드에 해당하는 테이블에서 2000 단위로 성별에 인덱스를 생성했다고
			가정하면 값의 range가 적은 성별은 인덱스를 읽고 다시 한 번 디스크 I/O가 발생하기 때문에 비효율적