1. 헤더 파일(Header file)
	- 다른 파일에 대한 선언을 가지고 있다.
	- <>는 컴파일러와 함께 제공되는 파일을 include 할 때 사용한다.
	 위 헤더 파일은 C++ 런타임 라이브러리의 헤더 파일로써 운영체제의 특별한 위치에 존재한다.
	- ""는 소스 파일이 있는 디렉토리에서 헤더 파일을 include 하도록 전처리기에게 지시한다.
	 일바적으로 이와 같은 방법으로 자신이 작성한 헤더 파일을 include 한다.
	 
	- 표준 라이브러리 헤더 파일
		- std::cout을 정의하지 않아도 #include <iostream>을 하면 iostream이라는 헤더 파일에 선언되어 있으므로
		 컴파일러는 오류를 발생하지 않는다.


2. 헤더 파일 작성하기
	- 사용하고자 하는 모든 함수에 대한 전방 선언을 각 파일에 작성하는 것은 매우 비효율적이다.
	- 헤더파일은 이러한 부담을 줄여 준다.
	 헤더 파일을 사용하면 선언을 필요한 만큼 한 번만 작성하면 되고, 함수 원형에 대한 유지보수를 편하게 해준다.
	 
	- 헤더 파일의 구성
		- 헤더 가드(header guard)
			> 같은 파일에서 두 번 이상 포함(include)되지 않게 해준다.
			e.g)
				#ifndef ADD_H
				#define ADD_H
		- .h 파일의 실제 내용.
			- 다른 파일에서 볼 수 있는 모든 함수에 대한 선언이다.
	
	- 컴파일러가 #include "add.h" 라인을 컴파일 하면 add.h의 내용을 현재 파일의 그 라인 시점에 복사한다.
	 add.h에 add()함수에 대한 원형이 포함되어 있으므로 이 원형은 add() 함수의 전방 선언으로 사용된다.